[
  {
    "objectID": "study/Experiment-1/main-figure/main-figure.html",
    "href": "study/Experiment-1/main-figure/main-figure.html",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"Congruent VE:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Small VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"Congruent VE\", \"Small VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"Congruent VE\", \n                                             \"Small VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 1",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-1/main-figure/main-figure.html#main-figure-of-experiment-1",
    "href": "study/Experiment-1/main-figure/main-figure.html#main-figure-of-experiment-1",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"Congruent VE:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Small VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"Congruent VE\", \"Small VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"Congruent VE\", \n                                             \"Small VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 1",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-1/Correlation/Correlation-Analysis-Experiment-1.html",
    "href": "study/Experiment-1/Correlation/Correlation-Analysis-Experiment-1.html",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n\nsmaller_ve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Small VE')\n\n\ncongruent_ve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Congruent VE')\n\ncorr_smaller_ve &lt;- cor.test(\n  smaller_ve$log_auditory_max_dist,\n  smaller_ve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"SVE: R = %.2g, p =  %.2g\",\n  corr_smaller_ve[4][[1]][[1]],\n  corr_smaller_ve[3][[1]][[1]])\n\ncorr_congruent_ve &lt;- cor.test(\n  congruent_ve$log_auditory_max_dist,\n  congruent_ve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"CVE: R = %.2g, p =  %.2g\",\n  corr_congruent_ve[4][[1]][[1]],\n  corr_congruent_ve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"Congruent VE\", \"Small VE\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 0.9, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 0.9, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 1",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-1/Correlation/Correlation-Analysis-Experiment-1.html#correlation-analysis-of-experiment-1",
    "href": "study/Experiment-1/Correlation/Correlation-Analysis-Experiment-1.html#correlation-analysis-of-experiment-1",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n\nsmaller_ve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Small VE')\n\n\ncongruent_ve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Congruent VE')\n\ncorr_smaller_ve &lt;- cor.test(\n  smaller_ve$log_auditory_max_dist,\n  smaller_ve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"SVE: R = %.2g, p =  %.2g\",\n  corr_smaller_ve[4][[1]][[1]],\n  corr_smaller_ve[3][[1]][[1]])\n\ncorr_congruent_ve &lt;- cor.test(\n  congruent_ve$log_auditory_max_dist,\n  congruent_ve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"CVE: R = %.2g, p =  %.2g\",\n  corr_congruent_ve[4][[1]][[1]],\n  corr_congruent_ve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"Congruent VE\", \"Small VE\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 0.9, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 0.9, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 1",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/main-figure/main-figure.html",
    "href": "study/Experiment-3/main-figure/main-figure.html",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n\nresults_tbl$room_condition = factor(results_tbl$room_condition, \n                                    levels= c(\"No visual info\", \"Congruent VE\"))\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Congruent VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Congruent VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Congruent VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 3",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-3/main-figure/main-figure.html#main-figure-of-experiment-3",
    "href": "study/Experiment-3/main-figure/main-figure.html#main-figure-of-experiment-3",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n\nresults_tbl$room_condition = factor(results_tbl$room_condition, \n                                    levels= c(\"No visual info\", \"Congruent VE\"))\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Congruent VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Congruent VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Congruent VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 3",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-3/Correlation/Correlation-Analysis-Experiment-3.html",
    "href": "study/Experiment-3/Correlation/Correlation-Analysis-Experiment-3.html",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\ncve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Congruent VE')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_cve &lt;- cor.test(\n  cve$log_auditory_max_dist,\n  cve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"CVE: R = %.2g, p =  %.2g\",\n  corr_cve[4][[1]][[1]],\n  corr_cve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"No visual info\", \"Congruent VE\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 3",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/Correlation/Correlation-Analysis-Experiment-3.html#correlation-analysis-of-experiment-3",
    "href": "study/Experiment-3/Correlation/Correlation-Analysis-Experiment-3.html#correlation-analysis-of-experiment-3",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\ncve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Congruent VE')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_cve &lt;- cor.test(\n  cve$log_auditory_max_dist,\n  cve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"CVE: R = %.2g, p =  %.2g\",\n  corr_cve[4][[1]][[1]],\n  corr_cve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"No visual info\", \"Congruent VE\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 3",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/main-figure/main-figure.html",
    "href": "study/Experiment-2/main-figure/main-figure.html",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Visual info:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 6.5, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 5.75, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,7)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Visual info\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Visual info\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 2",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-2/main-figure/main-figure.html#main-figure-of-experiment-2",
    "href": "study/Experiment-2/main-figure/main-figure.html#main-figure-of-experiment-2",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Visual info:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 6.5, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 5.75, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,7)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Visual info\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Visual info\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 2",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-2/Correlation/Correlation-Analysis-Experiment-2.html",
    "href": "study/Experiment-2/Correlation/Correlation-Analysis-Experiment-2.html",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\nvisual_info &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Visual info')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_visual_info &lt;- cor.test(\n  visual_info$log_auditory_max_dist,\n  visual_info$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"VI: R = %.2g, p =  %.2g\",\n  corr_visual_info[4][[1]][[1]],\n  corr_visual_info[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"No visual info\", \"Visual info\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 2",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/Correlation/Correlation-Analysis-Experiment-2.html#correlation-analysis-of-experiment-2",
    "href": "study/Experiment-2/Correlation/Correlation-Analysis-Experiment-2.html#correlation-analysis-of-experiment-2",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\nvisual_info &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Visual info')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_visual_info &lt;- cor.test(\n  visual_info$log_auditory_max_dist,\n  visual_info$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"VI: R = %.2g, p =  %.2g\",\n  corr_visual_info[4][[1]][[1]],\n  corr_visual_info[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1]),\n                      labels = c(\"No visual info\", \"Visual info\")) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 2",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-4/main-figure/main-figure.html",
    "href": "study/Experiment-4/main-figure/main-figure.html",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n\n\nresults_tbl$room_condition = factor(results_tbl$room_condition, \n                                      levels=c(\"No visual info\", \"Large VE\"))\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Large VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Large VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Large VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 4",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-4/main-figure/main-figure.html#main-figure-of-experiment-4",
    "href": "study/Experiment-4/main-figure/main-figure.html#main-figure-of-experiment-4",
    "title": "Main figure",
    "section": "",
    "text": "Figure showcases\n\nADP model\nLogarithmic signed bias\nPerceived depth\n\n\n\nCode\nresults_tbl &lt;- read.csv(\n  \"../../data/ADP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n\n\nresults_tbl$room_condition = factor(results_tbl$room_condition, \n                                      levels=c(\"No visual info\", \"Large VE\"))\n\n\n\n\nCode\nmyViridis &lt;- viridisLite::viridis(alpha=1, n= 3)\n\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition +\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = results_tbl) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n#anov1 = anova(m.Dist1)\n\nresults_tbl$Modelfitted1&lt;-predict(m.Dist1)\n\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\n\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No visual info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\n\neq2 &lt;- substitute(\"Large VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k=round(10^(mDist1stats$tidy_data$estimate[[1]]+\n                                   mDist1stats$tidy_data$estimate[[3]]), \n                               digits = 2),\n                       a= round(mDist1stats$tidy_data$estimate[[2]]+\n                                  mDist1stats$tidy_data$estimate[[4]], \n                                digits = 2)))\n\nresults_tbl &lt;- results_tbl %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.adp &lt;- ggplot(tabla.pob, aes(x=target_distance, \n                            y =10^Mperc_dist, \n                            group = room_condition, \n                            color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(\n    x = target_distance, \n    y =10^fit, \n    group=room_condition, \n    color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, \n             label = as.character(as.expression(eq1)), \n             hjust = 0, \n             nudge_x =0, \n             parse = TRUE, \n             size = 4, \n             color = myViridis[2])+\n  geom_label(x = -0.1, \n             y = 4.25, \n             label = as.character(as.expression(eq2)), \n             hjust = 0, \n             nudge_x =0,\n             parse = TRUE, \n             size = 4, \n             color = myViridis[1])+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No visual info\", \"Large VE\"), \n                     values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        size = 10\n        ) \n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = results_tbl)\n\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\ntabla.pob_logSB &lt;- results_tbl %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nfig.logBias &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100,\n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log signed bias (%)\",   limits = c(-100,0)) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) + \n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) + \n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 11, hjust = 0.0),\n        plot.margin = unit(c(.75,0.25,.25,0.0), \"cm\"))\n\n\n\n\nCode\ndimensions.depth &lt;- read.csv(\"../../data/VDP.csv\", header = TRUE, sep = ',', stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4 & dimension == \"Depth\") %&gt;%\n  select(-c(\"dimension\", \"block\", \"experiment\"))\n\ndimensions.depth &lt;- dimensions.depth %&gt;%\n  rename(\"Depth\" = \"value\",\n         \"Condition\" = \"room_condition\")\n\ndimensions.depth$Condition = factor(dimensions.depth$Condition, \n                                    levels=c(\"No visual info\", \n                                             \"Large VE\"))\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(Condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.5, n= 3)\n\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=Condition, y=Depth,  fill=Condition)) +\n  geom_violin(trim=FALSE) +\n  geom_point(data= dimensions.depth_sum, mapping = aes(y=mean))+\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean, \n                                                          ymin=mean - se,\n                                                          ymax=mean + se),\n                color = \"#22292F\",\n                width = .25) +\n  annotate(\"text\", x = 1.5, y = 18.5,  label = \"**\", size = 3) +\n  annotate(\"segment\", x = 1.1, xend = 1.9, y = 18, yend = 18, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = \"Mean perceived depth \\n± SEM (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  annotate(\"text\", x=1.5, y=14, label= \"12 m\", size=3.5) +\n  scale_colour_manual(values =c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 11, hjust = 0.0),\n    plot.margin = unit(c(.75,0.25,.75,0.0), \"cm\")# top right botom left\n    ) \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nplot(main_figure)",
    "crumbs": [
      "Experiment 4",
      "Main figure"
    ]
  },
  {
    "objectID": "study/Experiment-4/Correlation/Correlation-Analysis-Experiment-4.html",
    "href": "study/Experiment-4/Correlation/Correlation-Analysis-Experiment-4.html",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\nlve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Large VE')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_lve &lt;- cor.test(\n  lve$log_auditory_max_dist,\n  lve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"LVE: R = %.2g, p =  %.2g\",\n  corr_lve[4][[1]][[1]],\n  corr_lve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2]),\n                      ) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 4",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-4/Correlation/Correlation-Analysis-Experiment-4.html#correlation-analysis-of-experiment-4",
    "href": "study/Experiment-4/Correlation/Correlation-Analysis-Experiment-4.html#correlation-analysis-of-experiment-4",
    "title": "Correlation Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(effectsize)\n\n\n\n\nCode\ntabla.exp_1.corr &lt;- read.csv(\n  \"../../data/correlation.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n\nno_visual &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'No visual info')\n# N 42. df = n -2 = 40\n\nlve &lt;- tabla.exp_1.corr %&gt;%\n  filter(room_condition == 'Large VE')\n\ncorr_no_visual &lt;- cor.test(\n  no_visual$log_auditory_max_dist,\n  no_visual$log_visual_perc_depth , \n  method= 'pearson')\n\neqn1_cor &lt;- sprintf(\n  \"NVI: R = %.2g, p =  %.2g\",\n  corr_no_visual[4][[1]][[1]],\n  corr_no_visual[3][[1]][[1]])\n\ncorr_lve &lt;- cor.test(\n  lve$log_auditory_max_dist,\n  lve$log_visual_perc_depth , \n  method= 'pearson')\n\neqn2_cor &lt;- sprintf(\n  \"LVE: R = %.2g, p =  %.2g\",\n  corr_lve[4][[1]][[1]],\n  corr_lve[3][[1]][[1]])\n\nmyViridis &lt;- viridisLite::viridis(alpha=0.75, n= 3)\n\ncorrelation_plot &lt;- ggplot(tabla.exp_1.corr, \n                           aes(x =log_visual_perc_depth, \n                               y = log_auditory_max_dist,\n                               colour = room_condition)) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2]),\n                      ) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_point() +\n  geom_smooth(alpha=0.3, method= \"lm\")+\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 2.55,\n           label = eqn1_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[2],\n           ) +\n  annotate(\"label\",                        # Add text for mean\n           x = 1.1, # para fig compuesta\n           y = 3,\n           label = eqn2_cor,\n           size = 4,\n           hjust = 0,\n           color = myViridis[1],\n           ) +\n  #ggtitle(\"Correlation between visual and auditory distance assesments (log log)\") +\n  xlab(\"Visually Perceived Virtual Room Depth (m)\") +\n  ylab(\"Maximum Perceived \\n Auditory Distance (m)\")+\n  labs(color = \"Visual condition\") +  # Change legend title\n  theme_minimal()+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        #text=element_text(family=\"Arial\", size=10)\n        ) \n\n\nplot(correlation_plot)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Experiment 4",
      "Correlation Analysis"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Complementary data of The Influence of Visual Context on Auditory Distance Perception: A Comparison Between Real and Virtual Visual Environments - Cervino et al. 2025",
    "section": "",
    "text": "Data availability\nDownload the experiment data here",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "study/Experiment-4/VDP/VDP-Experiment-4.html",
    "href": "study/Experiment-4/VDP/VDP-Experiment-4.html",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n  \ndf.experiment_1_vdp$room_condition = factor(df.experiment_1_vdp$room_condition,\n                                            levels= c(\"No visual info\",\"Large VE\"))\n\nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.75\n3.74 – 7.76\n&lt;0.001\n\n\nroom condition [Large VE]\n4.83\n1.93 – 7.73\n0.002\n\n\nObservations\n27\n\n\nR2 / R2 adjusted\n0.320 / 0.292\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n157.0538\n157.05377\n11.74504\n0.0021187\n\n\nResiduals\n25\n334.2981\n13.37192\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.3196361\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-4.826923\n5.75\n10.57692\n-3.428323\n0.0021217\n24.88537\n-7.727338\n-1.926509\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |         95% CI\n--------------------------\n-1.32     | [-2.15, -0.47]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.82\n3.65 – 5.99\n&lt;0.001\n\n\nroom condition [Large VE]\n0.18\n-1.51 – 1.88\n0.825\n\n\nObservations\n21\n\n\nR2 / R2 adjusted\n0.003 / -0.050\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.1731602\n0.1731602\n0.0505101\n0.8245774\n\n\nResiduals\n19\n65.1363636\n3.4282297\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0026514\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.1818182\n4.818182\n5\n-0.2252156\n0.8242243\n18.93507\n-1.871924\n1.508287\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.50\n3.00 – 4.00\n&lt;0.001\n\n\nroom condition [Large VE]\n-0.28\n-1.00 – 0.45\n0.443\n\n\nObservations\n25\n\n\nR2 / R2 adjusted\n0.026 / -0.017\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.4719\n0.4719000\n0.6103585\n0.4426208\n\n\nResiduals\n23\n17.7825\n0.7731522\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0258513\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.275\n3.5\n3.225\n0.7820721\n0.4421767\n22.92159\n-0.4525398\n1.00254\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\n#dimensions.volume\n\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n96.96591\n170.5529\n-3.580245\n0.0006568\n-114.6377\n-32.5363\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning: Computation failed in `stat_signif()`.\nCaused by error in `wilcox.test.default()`:\n! not enough 'y' observations\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_3_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 4",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-4/VDP/VDP-Experiment-4.html#vdp-analysis-of-experiment-4",
    "href": "study/Experiment-4/VDP/VDP-Experiment-4.html#vdp-analysis-of-experiment-4",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 4)\n  \ndf.experiment_1_vdp$room_condition = factor(df.experiment_1_vdp$room_condition,\n                                            levels= c(\"No visual info\",\"Large VE\"))\n\nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.75\n3.74 – 7.76\n&lt;0.001\n\n\nroom condition [Large VE]\n4.83\n1.93 – 7.73\n0.002\n\n\nObservations\n27\n\n\nR2 / R2 adjusted\n0.320 / 0.292\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n157.0538\n157.05377\n11.74504\n0.0021187\n\n\nResiduals\n25\n334.2981\n13.37192\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.3196361\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-4.826923\n5.75\n10.57692\n-3.428323\n0.0021217\n24.88537\n-7.727338\n-1.926509\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |         95% CI\n--------------------------\n-1.32     | [-2.15, -0.47]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.82\n3.65 – 5.99\n&lt;0.001\n\n\nroom condition [Large VE]\n0.18\n-1.51 – 1.88\n0.825\n\n\nObservations\n21\n\n\nR2 / R2 adjusted\n0.003 / -0.050\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.1731602\n0.1731602\n0.0505101\n0.8245774\n\n\nResiduals\n19\n65.1363636\n3.4282297\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0026514\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.1818182\n4.818182\n5\n-0.2252156\n0.8242243\n18.93507\n-1.871924\n1.508287\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.50\n3.00 – 4.00\n&lt;0.001\n\n\nroom condition [Large VE]\n-0.28\n-1.00 – 0.45\n0.443\n\n\nObservations\n25\n\n\nR2 / R2 adjusted\n0.026 / -0.017\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.4719\n0.4719000\n0.6103585\n0.4426208\n\n\nResiduals\n23\n17.7825\n0.7731522\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0258513\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.275\n3.5\n3.225\n0.7820721\n0.4421767\n22.92159\n-0.4525398\n1.00254\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\n#dimensions.volume\n\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n96.96591\n170.5529\n-3.580245\n0.0006568\n-114.6377\n-32.5363\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning: Computation failed in `stat_signif()`.\nCaused by error in `wilcox.test.default()`:\n! not enough 'y' observations\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_3_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 4",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-4/ADP/ADP-Experiment-4.html",
    "href": "study/Experiment-4/ADP/ADP-Experiment-4.html",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.30\n-0.49 – -0.11\n0.002\n\n\ntarget distance [log10]\n0.95\n0.83 – 1.07\n&lt;0.001\n\n\nroom condition [Large VE]\n0.11\n-0.02 – 0.24\n0.106\n\n\ntarget distance [log10] ×room condition [Large VE]\n-0.12\n-0.27 – 0.02\n0.100\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.log10(target_distance)\n0.01\n\n\nτ11 subject.room_conditionNo visual info\n0.07\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.94\n\n\nICC\n0.71\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.489 / 0.850\n\n\n\n\n\n\n\n\nCode\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n\nWarning: Log-likelihood is corrected for models with transformed response.\n  However, this ignores `REML=TRUE`. Log-likelihood value is probably\n  inaccurate.\nWarning: Log-likelihood is corrected for models with transformed response.\n  However, this ignores `REML=TRUE`. Log-likelihood value is probably\n  inaccurate.\n\n\nNumber of labels is greater than default palette color count.\n• Select another color `palette` (and/or `package`).\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n4.3772422\n4.3772422\n1\n14.00868\n362.774654\n0.0000000\n\n\nroom_condition\n0.0318100\n0.0318100\n1\n47.77844\n2.636330\n0.1110248\n\n\nlog10(target_distance):room_condition\n0.0330338\n0.0330338\n1\n141.98207\n2.737761\n0.1002110\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.9628203\n0.95\n0.9213373\n1\n\n\nroom_condition\n0.0522928\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0189177\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Large VE :\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Large VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.31\n-0.50 – -0.13\n0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.00\n0.217\n\n\nroom condition [Large VE]\n0.09\n-0.03 – 0.21\n0.158\n\n\ntarget distance × roomcondition [Large VE]\n-0.01\n-0.02 – 0.00\n0.139\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.08\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.92\n\n\nICC\n0.70\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.032 / 0.711\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0882016\n0.0882016\n1\n14.48126\n7.414582\n0.0161066\n\n\nroom_condition\n0.0238774\n0.0238774\n1\n28.39239\n2.007231\n0.1674304\n\n\ntarget_distance:room_condition\n0.0262146\n0.0262146\n1\n141.62623\n2.203702\n0.1399020\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.3386296\n0.95\n0.0457787\n1\n\n\nroom_condition\n0.0660282\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0153216\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"LVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.03\n0.02 – 0.05\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.00 – -0.00\n0.047\n\n\nroom condition [Large VE]\n-0.01\n-0.03 – 0.01\n0.175\n\n\ntarget distance × roomcondition [Large VE]\n0.00\n-0.00 – 0.00\n0.370\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionLarge VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.044 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0022054\n0.0022054\n1\n20.0902\n3.4852928\n0.0765796\n\n\nroom_condition\n0.0011759\n0.0011759\n1\n103.9367\n1.8583068\n0.1757661\n\n\ntarget_distance:room_condition\n0.0005119\n0.0005119\n1\n157.3077\n0.8090499\n0.3697761\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size.SBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_size.SBVar, file =\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_size.SBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1478354\n0.95\n0\n1\n\n\nroom_condition\n0.0175652\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0051168\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.37\n0.22 – 0.53\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.762\n\n\nroom condition [Large VE]\n-0.10\n-0.21 – 0.01\n0.087\n\n\ntarget distance × roomcondition [Large VE]\n0.01\n-0.00 – 0.02\n0.088\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.03\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.06\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.86\n\n\nICC\n0.57\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.039 / 0.591\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0253822\n0.0253822\n1\n15.09221\n2.528260\n0.1325486\n\n\nroom_condition\n0.0297214\n0.0297214\n1\n27.95294\n2.960484\n0.0963758\n\n\ntarget_distance:room_condition\n0.0295876\n0.0295876\n1\n141.22173\n2.947153\n0.0882214\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1434843\n0.95\n0\n1\n\n\nroom_condition\n0.0957670\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0204424\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"LVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 4",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-4/ADP/ADP-Experiment-4.html#adp-analysis-of-experiment-4",
    "href": "study/Experiment-4/ADP/ADP-Experiment-4.html#adp-analysis-of-experiment-4",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.30\n-0.49 – -0.11\n0.002\n\n\ntarget distance [log10]\n0.95\n0.83 – 1.07\n&lt;0.001\n\n\nroom condition [Large VE]\n0.11\n-0.02 – 0.24\n0.106\n\n\ntarget distance [log10] ×room condition [Large VE]\n-0.12\n-0.27 – 0.02\n0.100\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.log10(target_distance)\n0.01\n\n\nτ11 subject.room_conditionNo visual info\n0.07\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.94\n\n\nICC\n0.71\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.489 / 0.850\n\n\n\n\n\n\n\n\nCode\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\n\nWarning: Log-likelihood is corrected for models with transformed response.\n  However, this ignores `REML=TRUE`. Log-likelihood value is probably\n  inaccurate.\nWarning: Log-likelihood is corrected for models with transformed response.\n  However, this ignores `REML=TRUE`. Log-likelihood value is probably\n  inaccurate.\n\n\nNumber of labels is greater than default palette color count.\n• Select another color `palette` (and/or `package`).\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n4.3772422\n4.3772422\n1\n14.00868\n362.774654\n0.0000000\n\n\nroom_condition\n0.0318100\n0.0318100\n1\n47.77844\n2.636330\n0.1110248\n\n\nlog10(target_distance):room_condition\n0.0330338\n0.0330338\n1\n141.98207\n2.737761\n0.1002110\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.9628203\n0.95\n0.9213373\n1\n\n\nroom_condition\n0.0522928\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0189177\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Large VE :\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Large VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.31\n-0.50 – -0.13\n0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.00\n0.217\n\n\nroom condition [Large VE]\n0.09\n-0.03 – 0.21\n0.158\n\n\ntarget distance × roomcondition [Large VE]\n-0.01\n-0.02 – 0.00\n0.139\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.08\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.92\n\n\nICC\n0.70\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.032 / 0.711\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0882016\n0.0882016\n1\n14.48126\n7.414582\n0.0161066\n\n\nroom_condition\n0.0238774\n0.0238774\n1\n28.39239\n2.007231\n0.1674304\n\n\ntarget_distance:room_condition\n0.0262146\n0.0262146\n1\n141.62623\n2.203702\n0.1399020\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.3386296\n0.95\n0.0457787\n1\n\n\nroom_condition\n0.0660282\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0153216\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"LVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.03\n0.02 – 0.05\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.00 – -0.00\n0.047\n\n\nroom condition [Large VE]\n-0.01\n-0.03 – 0.01\n0.175\n\n\ntarget distance × roomcondition [Large VE]\n0.00\n-0.00 – 0.00\n0.370\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionLarge VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.044 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0022054\n0.0022054\n1\n20.0902\n3.4852928\n0.0765796\n\n\nroom_condition\n0.0011759\n0.0011759\n1\n103.9367\n1.8583068\n0.1757661\n\n\ntarget_distance:room_condition\n0.0005119\n0.0005119\n1\n157.3077\n0.8090499\n0.3697761\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size.SBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_size.SBVar, file =\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_size.SBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1478354\n0.95\n0\n1\n\n\nroom_condition\n0.0175652\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0051168\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.37\n0.22 – 0.53\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.762\n\n\nroom condition [Large VE]\n-0.10\n-0.21 – 0.01\n0.087\n\n\ntarget distance × roomcondition [Large VE]\n0.01\n-0.00 – 0.02\n0.088\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.03\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.06\n\n\nτ11 subject.room_conditionLarge VE\n0.01\n\n\nρ01 subject\n-0.86\n\n\nICC\n0.57\n\n\nN subject\n16\n\nObservations\n184\n\n\nMarginal R2 / Conditional R2\n0.039 / 0.591\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0253822\n0.0253822\n1\n15.09221\n2.528260\n0.1325486\n\n\nroom_condition\n0.0297214\n0.0297214\n1\n27.95294\n2.960484\n0.0963758\n\n\ntarget_distance:room_condition\n0.0295876\n0.0295876\n1\n141.22173\n2.947153\n0.0882214\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1434843\n0.95\n0\n1\n\n\nroom_condition\n0.0957670\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0204424\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"LVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 4",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/VDP/VDP-Experiment-2.html",
    "href": "study/Experiment-2/VDP/VDP-Experiment-2.html",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\nThis sections showcases the comparision of percieved dimensions for two Virtual Environments presented as visual conditions (Small Virtual Environment and Congruent Virtual Environment)\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.76\n4.52 – 7.01\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n2.80\n0.99 – 4.62\n0.004\n\n\nObservations\n32\n\n\nR2 / R2 adjusted\n0.249 / 0.224\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n62.56253\n62.562531\n9.957316\n0.0036309\n\n\nResiduals\n30\n188.49216\n6.283072\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.2491988\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-2.801961\n5.764706\n8.566667\n-3.13942\n0.0038946\n28.75442\n-4.628024\n-0.9758973\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |         95% CI\n--------------------------\n-1.12     | [-1.86, -0.36]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.70\n3.91 – 5.49\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n0.55\n-0.55 – 1.65\n0.313\n\n\nObservations\n31\n\n\nR2 / R2 adjusted\n0.035 / 0.002\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n2.341935\n2.341935\n1.054598\n0.3129404\n\n\nResiduals\n29\n64.400000\n2.220690\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0350894\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.55\n4.7\n5.25\n-1.025013\n0.3139584\n28.56895\n-1.648146\n0.5481463\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.18\n2.79 – 3.57\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n0.04\n-0.49 – 0.58\n0.864\n\n\nObservations\n31\n\n\nR2 / R2 adjusted\n0.001 / -0.033\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.0155178\n0.0155178\n0.0300127\n0.863665\n\n\nResiduals\n29\n14.9941597\n0.5170400\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0010339\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.044958\n3.178571\n3.223529\n-0.1730501\n0.8638681\n27.74934\n-0.5773456\n0.4874296\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\n\n\nCode\ndimensions.volume\n\n\n# A tibble: 2 × 5\n  room_condition  mean    sd    se     n\n  &lt;fct&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 No visual info  86.1  49.7  12.5    46\n2 Visual info    145.   67.7  17.1    48\n\n\nCode\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\n\n\n\nCode\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n86.12059\n144.9782\n-4.81644\n6.2e-06\n-83.14961\n-34.56568\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#pooled_sd &lt;- sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2))\npooled_sd &lt;- sqrt(((dimensions.volume$n[1] - 1) * dimensions.volume$sd[1]^2 + \n                   (dimensions.volume$n[2] - 1) * dimensions.volume$sd[2]^2) / \n                    (dimensions.volume$n[1] + dimensions.volume$n[2] - 2))\n# Cohen's d for independent samples\ncohensd &lt;- (dimensions.volume$mean[1] - dimensions.volume$mean[2]) / pooled_sd\ncohensd\n\n\n[1] -0.9873901\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_2_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 2",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/VDP/VDP-Experiment-2.html#vdp-analysis-of-experiment-2",
    "href": "study/Experiment-2/VDP/VDP-Experiment-2.html#vdp-analysis-of-experiment-2",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 2)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\nThis sections showcases the comparision of percieved dimensions for two Virtual Environments presented as visual conditions (Small Virtual Environment and Congruent Virtual Environment)\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.76\n4.52 – 7.01\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n2.80\n0.99 – 4.62\n0.004\n\n\nObservations\n32\n\n\nR2 / R2 adjusted\n0.249 / 0.224\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n62.56253\n62.562531\n9.957316\n0.0036309\n\n\nResiduals\n30\n188.49216\n6.283072\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.2491988\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-2.801961\n5.764706\n8.566667\n-3.13942\n0.0038946\n28.75442\n-4.628024\n-0.9758973\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |         95% CI\n--------------------------\n-1.12     | [-1.86, -0.36]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.70\n3.91 – 5.49\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n0.55\n-0.55 – 1.65\n0.313\n\n\nObservations\n31\n\n\nR2 / R2 adjusted\n0.035 / 0.002\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n2.341935\n2.341935\n1.054598\n0.3129404\n\n\nResiduals\n29\n64.400000\n2.220690\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0350894\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.55\n4.7\n5.25\n-1.025013\n0.3139584\n28.56895\n-1.648146\n0.5481463\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.18\n2.79 – 3.57\n&lt;0.001\n\n\nroom condition [Visual\ninfo]\n0.04\n-0.49 – 0.58\n0.864\n\n\nObservations\n31\n\n\nR2 / R2 adjusted\n0.001 / -0.033\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.0155178\n0.0155178\n0.0300127\n0.863665\n\n\nResiduals\n29\n14.9941597\n0.5170400\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0010339\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.044958\n3.178571\n3.223529\n-0.1730501\n0.8638681\n27.74934\n-0.5773456\n0.4874296\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\n\n\nCode\ndimensions.volume\n\n\n# A tibble: 2 × 5\n  room_condition  mean    sd    se     n\n  &lt;fct&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 No visual info  86.1  49.7  12.5    46\n2 Visual info    145.   67.7  17.1    48\n\n\nCode\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\n\n\n\nCode\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n86.12059\n144.9782\n-4.81644\n6.2e-06\n-83.14961\n-34.56568\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#pooled_sd &lt;- sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2))\npooled_sd &lt;- sqrt(((dimensions.volume$n[1] - 1) * dimensions.volume$sd[1]^2 + \n                   (dimensions.volume$n[2] - 1) * dimensions.volume$sd[2]^2) / \n                    (dimensions.volume$n[1] + dimensions.volume$n[2] - 2))\n# Cohen's d for independent samples\ncohensd &lt;- (dimensions.volume$mean[1] - dimensions.volume$mean[2]) / pooled_sd\ncohensd\n\n\n[1] -0.9873901\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_2_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 2",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/ADP/ADP-Experiment-2.html",
    "href": "study/Experiment-2/ADP/ADP-Experiment-2.html",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.24\n-0.40 – -0.08\n0.003\n\n\ntarget distance [log10]\n0.93\n0.74 – 1.12\n&lt;0.001\n\n\nroom condition [Visualinfo]\n0.13\n0.00 – 0.25\n0.043\n\n\ntarget distance [log10] ×room condition [Visualinfo]\n0.03\n-0.10 – 0.15\n0.689\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.07\n\n\nτ11 subject.log10(target_distance)\n0.14\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-0.69\n\n\nICC\n0.81\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.455 / 0.899\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n1.1789209\n1.1789209\n1\n19.23496\n108.6497030\n0.0000000\n\n\nroom_condition\n0.0449662\n0.0449662\n1\n48.16976\n4.1441020\n0.0473001\n\n\nlog10(target_distance):room_condition\n0.0017411\n0.0017411\n1\n172.67740\n0.1604607\n0.6892279\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.8495914\n0.95\n0.7264567\n1\n\n\nroom_condition\n0.0792161\n0.95\n0.0005264\n1\n\n\nlog10(target_distance):room_condition\n0.0009284\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Visual Info:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,7)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Visual Info\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.27\n-0.42 – -0.13\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.01\n0.404\n\n\nroom condition [Visualinfo]\n0.15\n0.04 – 0.26\n0.008\n\n\ntarget distance × roomcondition [Visual info]\n0.00\n-0.01 – 0.01\n0.985\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-0.56\n\n\nICC\n0.80\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.101 / 0.825\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0081850\n0.0081850\n1\n19.25774\n0.7873626\n0.3858469\n\n\nroom_condition\n0.0733704\n0.0733704\n1\n30.30483\n7.0579612\n0.0124693\n\n\ntarget_distance:room_condition\n0.0000036\n0.0000036\n1\n172.12986\n0.0003498\n0.9850992\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0392796\n0.95\n0.0000000\n1\n\n\nroom_condition\n0.1889035\n0.95\n0.0257401\n1\n\n\ntarget_distance:room_condition\n0.0000020\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"VI\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.04\n0.02 – 0.06\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.00 – 0.00\n0.288\n\n\nroom condition [Visualinfo]\n-0.02\n-0.05 – 0.00\n0.054\n\n\ntarget distance × roomcondition [Visual info]\n0.00\n-0.00 – 0.01\n0.244\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.028 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0002671\n0.0002671\n1\n24.67747\n0.193906\n0.6635185\n\n\nroom_condition\n0.0051647\n0.0051647\n1\n160.39792\n3.748961\n0.0545984\n\n\ntarget_distance:room_condition\n0.0018789\n0.0018789\n1\n197.68576\n1.363869\n0.2442746\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.37\n0.26 – 0.47\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.504\n\n\nroom condition [Visualinfo]\n-0.17\n-0.27 – -0.07\n0.001\n\n\ntarget distance × roomcondition [Visual info]\n0.01\n-0.00 – 0.02\n0.197\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.01\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.01\n\n\nρ01 subject\n-0.78\n\n\nICC\n0.48\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.268 / 0.617\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0158189\n0.0158189\n1\n19.31928\n2.123654\n0.1611035\n\n\nroom_condition\n0.0868118\n0.0868118\n1\n29.05205\n11.654285\n0.0019073\n\n\ntarget_distance:room_condition\n0.0124944\n0.0124944\n1\n173.58176\n1.677351\n0.1969967\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0990375\n0.95\n0.0000000\n1\n\n\nroom_condition\n0.2863015\n0.95\n0.0797228\n1\n\n\ntarget_distance:room_condition\n0.0095707\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"VI\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 2",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-2/ADP/ADP-Experiment-2.html#adp-analysis-of-experiment-2",
    "href": "study/Experiment-2/ADP/ADP-Experiment-2.html#adp-analysis-of-experiment-2",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.24\n-0.40 – -0.08\n0.003\n\n\ntarget distance [log10]\n0.93\n0.74 – 1.12\n&lt;0.001\n\n\nroom condition [Visualinfo]\n0.13\n0.00 – 0.25\n0.043\n\n\ntarget distance [log10] ×room condition [Visualinfo]\n0.03\n-0.10 – 0.15\n0.689\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.07\n\n\nτ11 subject.log10(target_distance)\n0.14\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-0.69\n\n\nICC\n0.81\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.455 / 0.899\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n1.1789209\n1.1789209\n1\n19.23496\n108.6497030\n0.0000000\n\n\nroom_condition\n0.0449662\n0.0449662\n1\n48.16976\n4.1441020\n0.0473001\n\n\nlog10(target_distance):room_condition\n0.0017411\n0.0017411\n1\n172.67740\n0.1604607\n0.6892279\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.8495914\n0.95\n0.7264567\n1\n\n\nroom_condition\n0.0792161\n0.95\n0.0005264\n1\n\n\nlog10(target_distance):room_condition\n0.0009284\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Visual Info:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,7)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Visual Info\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.27\n-0.42 – -0.13\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.01\n0.404\n\n\nroom condition [Visualinfo]\n0.15\n0.04 – 0.26\n0.008\n\n\ntarget distance × roomcondition [Visual info]\n0.00\n-0.01 – 0.01\n0.985\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.05\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-0.56\n\n\nICC\n0.80\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.101 / 0.825\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0081850\n0.0081850\n1\n19.25774\n0.7873626\n0.3858469\n\n\nroom_condition\n0.0733704\n0.0733704\n1\n30.30483\n7.0579612\n0.0124693\n\n\ntarget_distance:room_condition\n0.0000036\n0.0000036\n1\n172.12986\n0.0003498\n0.9850992\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0392796\n0.95\n0.0000000\n1\n\n\nroom_condition\n0.1889035\n0.95\n0.0257401\n1\n\n\ntarget_distance:room_condition\n0.0000020\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"VI\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.04\n0.02 – 0.06\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.00 – 0.00\n0.288\n\n\nroom condition [Visualinfo]\n-0.02\n-0.05 – 0.00\n0.054\n\n\ntarget distance × roomcondition [Visual info]\n0.00\n-0.00 – 0.01\n0.244\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionVisual info\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.028 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0002671\n0.0002671\n1\n24.67747\n0.193906\n0.6635185\n\n\nroom_condition\n0.0051647\n0.0051647\n1\n160.39792\n3.748961\n0.0545984\n\n\ntarget_distance:room_condition\n0.0018789\n0.0018789\n1\n197.68576\n1.363869\n0.2442746\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.37\n0.26 – 0.47\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.504\n\n\nroom condition [Visualinfo]\n-0.17\n-0.27 – -0.07\n0.001\n\n\ntarget distance × roomcondition [Visual info]\n0.01\n-0.00 – 0.02\n0.197\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.01\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionVisual info\n0.01\n\n\nρ01 subject\n-0.78\n\n\nICC\n0.48\n\n\nN subject\n20\n\nObservations\n230\n\n\nMarginal R2 / Conditional R2\n0.268 / 0.617\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0158189\n0.0158189\n1\n19.31928\n2.123654\n0.1611035\n\n\nroom_condition\n0.0868118\n0.0868118\n1\n29.05205\n11.654285\n0.0019073\n\n\ntarget_distance:room_condition\n0.0124944\n0.0124944\n1\n173.58176\n1.677351\n0.1969967\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0990375\n0.95\n0.0000000\n1\n\n\nroom_condition\n0.2863015\n0.95\n0.0797228\n1\n\n\ntarget_distance:room_condition\n0.0095707\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"VI\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 2",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/VDP/VDP-Experiment-3.html",
    "href": "study/Experiment-3/VDP/VDP-Experiment-3.html",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n8.21\n6.30 – 10.12\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-1.41\n-4.11 – 1.29\n0.295\n\n\nObservations\n34\n\n\nR2 / R2 adjusted\n0.034 / 0.004\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n16.94118\n16.94118\n1.133998\n0.2948938\n\n\nResiduals\n32\n478.05882\n14.93934\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0342246\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n1.411765\n8.205882\n6.794118\n1.064893\n0.2958344\n28.59375\n-1.301339\n4.124868\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.68\n3.85 – 5.50\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-0.31\n-1.51 – 0.89\n0.602\n\n\nObservations\n32\n\n\nR2 / R2 adjusted\n0.009 / -0.024\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.7648284\n0.7648284\n0.2774337\n0.6022614\n\n\nResiduals\n30\n82.7039216\n2.7567974\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0091631\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.3098039\n4.676471\n4.366667\n0.5189319\n0.6080958\n26.62025\n-0.9159633\n1.535571\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.46\n3.05 – 3.86\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-0.29\n-0.93 – 0.35\n0.359\n\n\nObservations\n30\n\n\nR2 / R2 adjusted\n0.030 / -0.004\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.61250\n0.612500\n0.8706504\n0.3587524\n\n\nResiduals\n28\n19.69792\n0.703497\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0301569\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.2916667\n3.458333\n3.166667\n0.8957871\n0.3808121\n20.40644\n-0.3866531\n0.9699864\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\n#dimensions.volume\n\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n132.712\n93.94755\n2.499963\n0.0142738\n7.949727\n69.57927\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning: Computation failed in `stat_signif()`.\nCaused by error in `wilcox.test.default()`:\n! not enough 'y' observations\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_3_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 3",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/VDP/VDP-Experiment-3.html#vdp-analysis-of-experiment-3",
    "href": "study/Experiment-3/VDP/VDP-Experiment-3.html#vdp-analysis-of-experiment-3",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 3)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n8.21\n6.30 – 10.12\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-1.41\n-4.11 – 1.29\n0.295\n\n\nObservations\n34\n\n\nR2 / R2 adjusted\n0.034 / 0.004\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n16.94118\n16.94118\n1.133998\n0.2948938\n\n\nResiduals\n32\n478.05882\n14.93934\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0342246\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n1.411765\n8.205882\n6.794118\n1.064893\n0.2958344\n28.59375\n-1.301339\n4.124868\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n    geom_signif(comparisons = list(c(\"No visual info\",\n                                   \"Visual info\")),   \n              map_signif_level=TRUE,\n              tip_length = 0.0, \n              size = 0.5,\n              y_position = 13,\n              extend_line = -0.4)+\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.68\n3.85 – 5.50\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-0.31\n-1.51 – 0.89\n0.602\n\n\nObservations\n32\n\n\nR2 / R2 adjusted\n0.009 / -0.024\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.7648284\n0.7648284\n0.2774337\n0.6022614\n\n\nResiduals\n30\n82.7039216\n2.7567974\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0091631\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.3098039\n4.676471\n4.366667\n0.5189319\n0.6080958\n26.62025\n-0.9159633\n1.535571\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.46\n3.05 – 3.86\n&lt;0.001\n\n\nroom condition [No visual\ninfo]\n-0.29\n-0.93 – 0.35\n0.359\n\n\nObservations\n30\n\n\nR2 / R2 adjusted\n0.030 / -0.004\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.61250\n0.612500\n0.8706504\n0.3587524\n\n\nResiduals\n28\n19.69792\n0.703497\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0301569\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.2916667\n3.458333\n3.166667\n0.8957871\n0.3808121\n20.40644\n-0.3866531\n0.9699864\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\n#rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\n#dimensions.volume\n\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\n\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n132.712\n93.94755\n2.499963\n0.0142738\n7.949727\n69.57927\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning: Computation failed in `stat_signif()`.\nCaused by error in `wilcox.test.default()`:\n! not enough 'y' observations\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_3_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 3",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/ADP/ADP-Experiment-3.html",
    "href": "study/Experiment-3/ADP/ADP-Experiment-3.html",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.36\n-0.53 – -0.19\n&lt;0.001\n\n\ntarget distance [log10]\n0.92\n0.73 – 1.11\n&lt;0.001\n\n\nroom condition [CongruentVE]\n-0.02\n-0.12 – 0.09\n0.763\n\n\ntarget distance [log10] ×room condition [CongruentVE]\n0.02\n-0.11 – 0.14\n0.812\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.10\n\n\nτ11 subject.log10(target_distance)\n0.15\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionCongruent VE\n0.02\n\n\nρ01 subject\n-0.71\n\n\nICC\n0.82\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.387 / 0.892\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n1.2432620\n1.2432620\n1\n19.00766\n104.1805586\n0.0000000\n\n\nroom_condition\n0.0010831\n0.0010831\n1\n79.65235\n0.0907554\n0.7640040\n\n\nlog10(target_distance):room_condition\n0.0006785\n0.0006785\n1\n176.38182\n0.0568539\n0.8118163\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.8457023\n0.95\n0.7185516\n1\n\n\nroom_condition\n0.0011381\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0003222\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Congruent VE :\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Congruent VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.40\n-0.56 – -0.25\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.01\n0.546\n\n\nroom condition [CongruentVE]\n-0.01\n-0.10 – 0.09\n0.872\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.01 – 0.01\n0.891\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.08\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.03\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nρ01 subject\n-0.51\n\n\nICC\n0.82\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.002 / 0.824\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0051341\n0.0051341\n1\n19.02673\n0.3544609\n0.5586144\n\n\nroom_condition\n0.0003751\n0.0003751\n1\n52.79796\n0.0258942\n0.8727730\n\n\ntarget_distance:room_condition\n0.0002704\n0.0002704\n1\n176.33093\n0.0186719\n0.8914670\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0182889\n0.95\n0\n1\n\n\nroom_condition\n0.0004902\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0001059\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"CVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.05\n0.03 – 0.07\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.01 – -0.00\n0.002\n\n\nroom condition [CongruentVE]\n-0.01\n-0.03 – 0.01\n0.310\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.00 – 0.00\n0.544\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.1.room_conditionCongruent VE\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.088 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0116444\n0.0116444\n1\n23.43919\n11.0509831\n0.0029007\n\n\nroom_condition\n0.0010912\n0.0010912\n1\n213.72978\n1.0355816\n0.3100019\n\n\ntarget_distance:room_condition\n0.0003892\n0.0003892\n1\n213.56635\n0.3693939\n0.5439806\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size.SBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_size.SBVar, file =\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_size.SBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.3204096\n0.95\n0.0840194\n1\n\n\nroom_condition\n0.0048219\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0017267\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.44\n0.29 – 0.58\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.02\n0.659\n\n\nroom condition [CongruentVE]\n-0.01\n-0.09 – 0.07\n0.805\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.01 – 0.01\n0.706\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.03\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.07\n\n\nτ11 subject.room_conditionCongruent VE\n0.05\n\n\nρ01 subject\n-0.99\n\n\nICC\n0.32\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.007 / 0.321\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0052936\n0.0052936\n1\n19.02634\n0.3989728\n0.5351364\n\n\nroom_condition\n0.0008064\n0.0008064\n1\n69.93603\n0.0607752\n0.8059970\n\n\ntarget_distance:room_condition\n0.0018957\n0.0018957\n1\n176.33655\n0.1428738\n0.7058953\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0205388\n0.95\n0\n1\n\n\nroom_condition\n0.0008683\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0008096\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"CVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 3",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-3/ADP/ADP-Experiment-3.html#adp-analysis-of-experiment-3",
    "href": "study/Experiment-3/ADP/ADP-Experiment-3.html#adp-analysis-of-experiment-3",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\ntab_model(m.Dist1, file =\"./stats/lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.36\n-0.53 – -0.19\n&lt;0.001\n\n\ntarget distance [log10]\n0.92\n0.73 – 1.11\n&lt;0.001\n\n\nroom condition [CongruentVE]\n-0.02\n-0.12 – 0.09\n0.763\n\n\ntarget distance [log10] ×room condition [CongruentVE]\n0.02\n-0.11 – 0.14\n0.812\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.10\n\n\nτ11 subject.log10(target_distance)\n0.15\n\n\nτ11 subject.room_conditionNo visual info\n0.04\n\n\nτ11 subject.room_conditionCongruent VE\n0.02\n\n\nρ01 subject\n-0.71\n\n\nICC\n0.82\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.387 / 0.892\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n1.2432620\n1.2432620\n1\n19.00766\n104.1805586\n0.0000000\n\n\nroom_condition\n0.0010831\n0.0010831\n1\n79.65235\n0.0907554\n0.7640040\n\n\nlog10(target_distance):room_condition\n0.0006785\n0.0006785\n1\n176.38182\n0.0568539\n0.8118163\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.8457023\n0.95\n0.7185516\n1\n\n\nroom_condition\n0.0011381\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0003222\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"No Visual Info:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Congruent VE :\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"No Visual Info\", \"Congruent VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.40\n-0.56 – -0.25\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.02 – 0.01\n0.546\n\n\nroom condition [CongruentVE]\n-0.01\n-0.10 – 0.09\n0.872\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.01 – 0.01\n0.891\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.08\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.03\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nρ01 subject\n-0.51\n\n\nICC\n0.82\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.002 / 0.824\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0051341\n0.0051341\n1\n19.02673\n0.3544609\n0.5586144\n\n\nroom_condition\n0.0003751\n0.0003751\n1\n52.79796\n0.0258942\n0.8727730\n\n\ntarget_distance:room_condition\n0.0002704\n0.0002704\n1\n176.33093\n0.0186719\n0.8914670\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0182889\n0.95\n0\n1\n\n\nroom_condition\n0.0004902\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0001059\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean log bias (m)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"NVI\", \"CVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.05\n0.03 – 0.07\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.01 – -0.00\n0.002\n\n\nroom condition [CongruentVE]\n-0.01\n-0.03 – 0.01\n0.310\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.00 – 0.00\n0.544\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.1.room_conditionCongruent VE\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.088 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0116444\n0.0116444\n1\n23.43919\n11.0509831\n0.0029007\n\n\nroom_condition\n0.0010912\n0.0010912\n1\n213.72978\n1.0355816\n0.3100019\n\n\ntarget_distance:room_condition\n0.0003892\n0.0003892\n1\n213.56635\n0.3693939\n0.5439806\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size.SBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_size.SBVar, file =\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_size.SBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.3204096\n0.95\n0.0840194\n1\n\n\nroom_condition\n0.0048219\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0017267\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.44\n0.29 – 0.58\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.02\n0.659\n\n\nroom condition [CongruentVE]\n-0.01\n-0.09 – 0.07\n0.805\n\n\ntarget distance × roomcondition [Congruent VE]\n0.00\n-0.01 – 0.01\n0.706\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.03\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionNo visual info\n0.07\n\n\nτ11 subject.room_conditionCongruent VE\n0.05\n\n\nρ01 subject\n-0.99\n\n\nICC\n0.32\n\n\nN subject\n20\n\nObservations\n237\n\n\nMarginal R2 / Conditional R2\n0.007 / 0.321\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0052936\n0.0052936\n1\n19.02634\n0.3989728\n0.5351364\n\n\nroom_condition\n0.0008064\n0.0008064\n1\n69.93603\n0.0607752\n0.8059970\n\n\ntarget_distance:room_condition\n0.0018957\n0.0018957\n1\n176.33655\n0.1428738\n0.7058953\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0205388\n0.95\n0\n1\n\n\nroom_condition\n0.0008683\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0008096\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"NVI\", \"CVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 3",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-1/VDP/VDP-Experiment-1.html",
    "href": "study/Experiment-1/VDP/VDP-Experiment-1.html",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\nThis sections showcases the comparision of percieved dimensions for two Virtual Environments presented as visual conditions (Small Virtual Environment and Congruent Virtual Environment)\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n8.08\n7.09 – 9.07\n&lt;0.001\n\n\nroom condition [Small VE]\n-2.04\n-3.42 – -0.66\n0.004\n\n\nObservations\n95\n\n\nR2 / R2 adjusted\n0.084 / 0.075\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n98.49221\n98.49221\n8.581417\n0.0042716\n\n\nResiduals\n93\n1067.39663\n11.47738\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0844782\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n2.037444\n8.078261\n6.040816\n2.924246\n0.0043501\n91.70198\n0.6535953\n3.421294\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |       95% CI\n------------------------\n0.60      | [0.19, 1.01]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.53\n4.01 – 5.06\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.30\n-1.03 – 0.44\n0.427\n\n\nObservations\n75\n\n\nR2 / R2 adjusted\n0.009 / -0.005\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n1.637965\n1.637965\n0.6378179\n0.4270927\n\n\nResiduals\n73\n187.469502\n2.568075\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0086616\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.2955903\n4.532432\n4.236842\n0.7989058\n0.4269367\n72.99972\n-0.4418066\n1.032987\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.24\n2.95 – 3.52\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.02\n-0.42 – 0.39\n0.939\n\n\nObservations\n90\n\n\nR2 / R2 adjusted\n0.000 / -0.011\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.0054444\n0.0054444\n0.0058142\n0.9393926\n\n\nResiduals\n88\n82.4035556\n0.9364040\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n6.61e-05\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.0155556\n3.237778\n3.222222\n0.0762509\n0.9393929\n87.82179\n-0.3898726\n0.4209837\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\nsve_cve_t_test.volume\n\n\n\n    Welch Modified Two-Sample t-Test\n\ndata:  Summarized x and y\nt = 4.2847, df = 244.73, p-value = 2.632e-05\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 19.49336 52.66472\nsample estimates:\nmean of x mean of y \n118.54855  82.46951 \n\n\n\n\n\n\nCode\n#pooled_sd &lt;- sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2))\npooled_sd &lt;- sqrt(((dimensions.volume$n[1] - 1) * dimensions.volume$sd[1]^2 + \n                   (dimensions.volume$n[2] - 1) * dimensions.volume$sd[2]^2) / \n                    (dimensions.volume$n[1] + dimensions.volume$n[2] - 2))\n# Cohen's d for independent samples\ncohensd &lt;- (dimensions.volume$mean[1] - dimensions.volume$mean[2]) / pooled_sd\ncohensd\n\n\n[1] 0.5331832\n\n\n\n\nCode\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n118.5486\n82.46951\n4.284724\n2.63e-05\n19.49336\n52.66472\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_1_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 1",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-1/VDP/VDP-Experiment-1.html#vdp-analysis-of-experiment-1",
    "href": "study/Experiment-1/VDP/VDP-Experiment-1.html#vdp-analysis-of-experiment-1",
    "title": "VDP Analysis",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rstatix) # stat.test\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\nlibrary(sjPlot)\nlibrary(BSDA)\n\n\n\n\nCode\ndf.experiment_1_vdp &lt;- read.csv(\n  \"../../data/VDP.csv\", \n  header = TRUE, sep = ',',\n  stringsAsFactors = TRUE) %&gt;%\n  filter(experiment == 1)\n  \nmyViridis &lt;- viridisLite::viridis(alpha=.75, n= 3)\n\n\nThis sections showcases the comparision of percieved dimensions for two Virtual Environments presented as visual conditions (Small Virtual Environment and Congruent Virtual Environment)\n\n\n\n\nCode\ndimensions.depth &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Depth\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Depth\" = \"value\")\n\ndimensions.depth_sum &lt;- dimensions.depth %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Depth),\n    median = median(Depth),\n    sd = sd(Depth),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[1],\n  dimensions.depth_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.depth_sum$mean[2],\n  dimensions.depth_sum$se[2])\n\n\n\n\n\n\nCode\nlm.depth &lt;- lm(Depth ~ room_condition, \n                    data = dimensions.depth)\n\ntab_model(lm.depth, file =\"./stats/depth/depth-lm.html\")\n\n\n\n\n\n \nDepth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n8.08\n7.09 – 9.07\n&lt;0.001\n\n\nroom condition [Small VE]\n-2.04\n-3.42 – -0.66\n0.004\n\n\nObservations\n95\n\n\nR2 / R2 adjusted\n0.084 / 0.075\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.depth &lt;- anova(lm.depth)\n\nwrite.csv(anova.depth, file=\"./stats/depth/depth-lm-anova.csv\")\nknitr::kable(anova.depth, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n98.49221\n98.49221\n8.581417\n0.0042716\n\n\nResiduals\n93\n1067.39663\n11.47738\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.depth = eta_squared(anova.depth)\n\nwrite.csv(eta_sqrd.depth, file=\"./stats/depth/depth-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.depth, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0844782\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.depth &lt;- t.test(Depth~room_condition, data= dimensions.depth)\n\nt_test.depth &lt;- tidy(t_test.depth)\n\nwrite.csv(t_test.depth, file=\"./stats/depth/depth-t-test.csv\")\n\nknitr::kable(t_test.depth, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n2.037444\n8.078261\n6.040816\n2.924246\n0.0043501\n91.70198\n0.6535953\n3.421294\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffectsize::cohens_d(Depth~room_condition, data= dimensions.depth)\n\n\nCohen's d |       95% CI\n------------------------\n0.60      | [0.19, 1.01]\n\n- Estimated using pooled SD.\n\n\n\n\n\n\n\nCode\nviolin_depth &lt;- ggplot(dimensions.depth, aes(x=room_condition, y=Depth,  fill=room_condition)) +\n  geom_violin(trim=FALSE) +\n  geom_errorbar(data= dimensions.depth_sum, mapping = aes(y= mean , ymin=mean - se,\n          ymax=mean + se),\n          color = \"#22292F\",\n          width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.450, # para fig compuesta\n           y = 15.5,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.4, \n           y = 15.5,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n    labs(\n    y = \"Depth (m)\",\n  )+\n  theme_minimal() +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=12,linetype=\"dashed\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  annotate(\"text\", x=0.5, y=10, label= \"12 m\", size=2.5) +\n  theme(\n    #axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nCode\ndimensions.width &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Width\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Width\" = \"value\")\n\ndimensions.width_sum &lt;- dimensions.width %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Width),\n    median = median(Width),\n    sd = sd(Width),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[1],\n  dimensions.width_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.width_sum$mean[2],\n  dimensions.width_sum$se[2])\n\n\n\n\n\n\nCode\nlm.width &lt;- lm(Width ~ room_condition, \n                    data = dimensions.width)\n\ntab_model(lm.width, file =\"./stats/width/width-lm.html\")\n\n\n\n\n\n \nWidth\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n4.53\n4.01 – 5.06\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.30\n-1.03 – 0.44\n0.427\n\n\nObservations\n75\n\n\nR2 / R2 adjusted\n0.009 / -0.005\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.width &lt;- anova(lm.width)\n\nwrite.csv(anova.width, file=\"./stats/width/width-lm-anova.csv\")\nknitr::kable(anova.width, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n1.637965\n1.637965\n0.6378179\n0.4270927\n\n\nResiduals\n73\n187.469502\n2.568075\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.width = eta_squared(anova.width)\n\nwrite.csv(eta_sqrd.width, file=\"./stats/width/width-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.width, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n0.0086616\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.width &lt;- t.test(Width~room_condition, data= dimensions.width)\n\nt_test.width &lt;- tidy(t_test.width)\n\nwrite.csv(t_test.width, file=\"./stats/width/width-t-test.csv\")\n\nknitr::kable(t_test.width, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.2955903\n4.532432\n4.236842\n0.7989058\n0.4269367\n72.99972\n-0.4418066\n1.032987\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Use single color\nviolin_width &lt;- ggplot(dimensions.width, aes(x=room_condition, y=Width,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_jitter(alpha = 0.1) +\n  geom_errorbar(data= dimensions.width_sum, mapping = aes(y= mean , ymin=mean - se,\n        ymax=mean + se),\n        color = \"#22292F\",\n        width = .1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 10.0,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 10.0,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n  guides(fill = \"none\") +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  geom_hline(yintercept=7,linetype=\"dashed\")+\n  annotate(\"text\", x=0.5, y=6, label= \"7 m\", size=2.5) +\n  labs(\n    y = \"Width (m)\",\n  ) +\n  theme(\n    axis.text.x=element_blank(),\n    axis.title.x = element_blank()) \n\n\n\n\n\n\n\n\nCode\ndimensions.height &lt;- df.experiment_1_vdp %&gt;%\n  filter(dimension == \"Height\") %&gt;%\n  select(c(\"subject\",\"room_condition\", \"value\")) %&gt;%\n  rename(\"Height\" = \"value\")\n\ndimensions.height_sum &lt;- dimensions.height %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = mean(Height),\n    median = median(Height),\n    sd = sd(Height),\n    se = sd / sqrt(n()),\n    n = n()\n  )\n\neqn1 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[1],\n  dimensions.height_sum$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g \\n ± %.2g\",\n  dimensions.height_sum$mean[2],\n  dimensions.height_sum$se[2])\n\n\n\n\n\n\nCode\nlm.height &lt;- lm(Height ~ room_condition, \n                    data = dimensions.height)\n\ntab_model(lm.height, file =\"./stats/height/height-lm.html\")\n\n\n\n\n\n \nHeight\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n3.24\n2.95 – 3.52\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.02\n-0.42 – 0.39\n0.939\n\n\nObservations\n90\n\n\nR2 / R2 adjusted\n0.000 / -0.011\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nanova.height &lt;- anova(lm.height)\n\nwrite.csv(anova.height, file=\"./stats/height/width-lm-anova.csv\")\nknitr::kable(anova.height, \"html\")\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nroom_condition\n1\n0.0054444\n0.0054444\n0.0058142\n0.9393926\n\n\nResiduals\n88\n82.4035556\n0.9364040\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd.height = eta_squared(anova.height)\n\nwrite.csv(eta_sqrd.height, file=\"./stats/height/height-lm-effect-size.csv\")\n\nknitr::kable(eta_sqrd.height, \"html\")\n\n\n\n\n\n\nx\n\n\n\n\nroom_condition\n6.61e-05\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nt_test.height &lt;- t.test(Height~room_condition, data= dimensions.height)\n\nt_test.height &lt;- tidy(t_test.height)\n\nwrite.csv(t_test.height, file=\"./stats/height/height-t-test.csv\")\n\nknitr::kable(t_test.height, \"html\")\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.0155556\n3.237778\n3.222222\n0.0762509\n0.9393929\n87.82179\n-0.3898726\n0.4209837\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviolin_height &lt;- ggplot(dimensions.height, aes(x=room_condition, y=Height,  fill=room_condition)) +\n  geom_violin(trim=FALSE)+\n  geom_errorbar(data= dimensions.height_sum, mapping = aes(y= mean , ymin=mean - se,\n      ymax=mean + se),\n      color = \"#22292F\",\n      width = .1) +\n  geom_jitter(alpha = 0.1) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.50, # para fig compuesta\n           y = 5.75,\n           label = eqn1,\n           size = 2.35,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.40, # para fig compuesta\n           y = 5.75,\n           label = eqn2,\n           size = 2.35,\n           hjust = 0) +\n  theme_minimal() +\n    scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  guides(fill = \"none\") +\n  geom_hline(yintercept=3,linetype=\"dashed\") +\n  annotate(\"text\", x=0.5, y=2.5, label= \"3 m\", size=2.5) +\n  labs(\n    y = \"Height (m)\",\n  ) +\n  theme(\n    axis.title.x = element_blank()) \n\n\n\n\n\n\nNOTE: this comparison of volume has been left out of the manuscript as its propagated from pooled values of depth, width and height and does not properly account for intra-subject variability.\n\n\nCode\ndimensions.aggr &lt;- dimensions.depth_sum\ndimensions.aggr$type = \"Depth\"\n\ndimensions.width_sum$type = \"Width\"\n\ndimensions.height_sum$type = \"Height\"\n\ndimensions.vol_aggr &lt;- rbind(dimensions.aggr, dimensions.width_sum, dimensions.height_sum)\n\ndimensions.vol_aggr &lt;- dimensions.vol_aggr %&gt;%\n  mutate(rel_error = (sd/mean)^2) %&gt;%\n  mutate(ses_error = (se/mean)^2)\n\ndimensions.volume &lt;- dimensions.vol_aggr %&gt;%\n  group_by(room_condition) %&gt;%\n  summarise(\n    mean = prod(mean),\n    sd = mean * sqrt(sum(rel_error)),\n    se = mean * sqrt(sum(ses_error)),\n    n = sum(n)\n  )\n\n\n\n\nCode\neqn1 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[1],\n  dimensions.volume$se[1])\n\neqn2 &lt;- sprintf(\n  \"M = %.3g ± %.4g\",\n  dimensions.volume$mean[2],\n  dimensions.volume$se[2])\n\n\nsve_cve_t_test.volume &lt;- tsum.test(mean.x=dimensions.volume$mean[1],\n          s.x= dimensions.volume$sd[1],\n          n.x=dimensions.volume$n[1],\n          mean.y=dimensions.volume$mean[2],\n          s.y= dimensions.volume$sd[2],\n          n.y=dimensions.volume$n[2],\n          )\nsve_cve_t_test.volume\n\n\n\n    Welch Modified Two-Sample t-Test\n\ndata:  Summarized x and y\nt = 4.2847, df = 244.73, p-value = 2.632e-05\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 19.49336 52.66472\nsample estimates:\nmean of x mean of y \n118.54855  82.46951 \n\n\n\n\n\n\nCode\n#pooled_sd &lt;- sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2))\npooled_sd &lt;- sqrt(((dimensions.volume$n[1] - 1) * dimensions.volume$sd[1]^2 + \n                   (dimensions.volume$n[2] - 1) * dimensions.volume$sd[2]^2) / \n                    (dimensions.volume$n[1] + dimensions.volume$n[2] - 2))\n# Cohen's d for independent samples\ncohensd &lt;- (dimensions.volume$mean[1] - dimensions.volume$mean[2]) / pooled_sd\ncohensd\n\n\n[1] 0.5331832\n\n\n\n\nCode\nsve_cve_t_test_vol.tidy &lt;- tidy(sve_cve_t_test.volume)\n\nwrite.csv(sve_cve_t_test_vol.tidy, file=\"stats/volume/volume-t-test.csv\")\n\nknitr::kable(sve_cve_t_test_vol.tidy, \"html\")\n\n\n\n\n\nestimate1\nestimate2\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n118.5486\n82.46951\n4.284724\n2.63e-05\n19.49336\n52.66472\nWelch Modified Two-Sample t-Test\ntwo.sided\n\n\n\n\n\n\n\n\n\nCode\ndim_barchart &lt;- dimensions.volume %&gt;%\n  ggplot(aes(room_condition, mean)) +\n  geom_col(aes(fill = room_condition), color =\"black\", width =0.85) +\n  geom_errorbar(aes(ymin=mean - se,\n                    ymax=mean + se),\n                color = \"#22292F\",\n                width = .1) +\n  scale_y_continuous(limits = c(0, 310), expand = c(0, 0)) +\n  geom_hline(yintercept=252,linetype=\"dashed\") +\n  annotate(\"text\", x=0.75, y=259, label= expression(\"252 m\"^3*\" \")) +\n  guides(fill = \"none\") +\n  theme_minimal() +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 0.25, # para fig compuesta\n           y = 290.0,\n           label = eqn1,\n           size = 3.25,\n           hjust = 0) +\n  annotate(\"text\",                        # Add text for mean\n           #x = 1.5, # para fig sola\n           x = 1.250, # para fig compuesta\n           y = 280.0,\n           label = eqn2,\n           size = 3.25,\n           hjust = 0) +\n  scale_colour_manual(values =myViridis) +\n  scale_fill_manual(values = myViridis) +\n  #annotate(\"text\", x = 1.5, y = 215,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 1.9, y = 210, yend = 210, colour = \"black\", size=.5, alpha=1,)+\n  #annotate(\"text\", x = 2, y = 235,  label = \"***\", size = 3) +\n  #annotate(\"segment\", x = 1.1, xend = 2.9, y = 230, yend = 230, colour = \"black\", size=.5, alpha=1,)+\n  labs(\n    y = expression(\"Perceived volume (m\"^3*\")\"),\n  )+\n  theme(#axis.line = element_blank(),\n    axis.title.x = element_blank())\n\n\n\n\n\n\n\n\nCode\n# figure &lt;- ggarrange(violin_depth, violin_width,violin_height,\n#                     ncol = 3, labels = c(\"B\", \"C\", \"D\"))\n\nfigure &lt;- ggarrange(dim_barchart, \n                    ggarrange(violin_depth, violin_width,violin_height, widths = c(1.5,2),\n                              nrow = 3, labels = c(\"B\", \"C\", \"D\")),\n                    ncol = 2, \n                    labels =\"A\",\n                    heights = c(1, 0.75))\n\n\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n\n\nCode\n#figure\n\nfigures_folder = \"./figures\"\nmi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, \"Exp_1_Perceived_room.png\", sep = '')\nggsave(mi_nombre_de_archivo, plot =figure, width = 1400, height=1000, dpi=200, units = \"px\")\n\n\n\n\nCode\nplot(figure)",
    "crumbs": [
      "Experiment 1",
      "VDP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-1/ADP/ADP-Experiment-1.html",
    "href": "study/Experiment-1/ADP/ADP-Experiment-1.html",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\nm.Dist1.tidy &lt;- tidy(m.Dist1)\nwrite_csv(m.Dist1.tidy, file=\"./stats/exp_1_model_detail.csv\")\ntab_model(m.Dist1, file =\"./stats/exp_1_lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.42\n-0.53 – -0.31\n&lt;0.001\n\n\ntarget distance [log10]\n1.03\n0.94 – 1.12\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.00\n-0.08 – 0.07\n0.897\n\n\ntarget distance [log10] ×room condition [Small VE]\n-0.01\n-0.10 – 0.08\n0.818\n\n\nRandom Effects\n\n\n\nσ2\n0.02\n\n\n\nτ00 subject\n0.10\n\n\nτ11 subject.log10(target_distance)\n0.05\n\n\nτ11 subject.room_conditionCongruent VE\n0.02\n\n\nτ11 subject.room_conditionSmall VE\n0.02\n\n\nρ01 subject\n-0.54\n\n\nICC\n0.82\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.373 / 0.889\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/exp_1_anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n9.8561634\n9.8561634\n1\n44.95366\n633.8652775\n0.0000000\n\n\nroom_condition\n0.0002595\n0.0002595\n1\n273.10060\n0.0166892\n0.8973050\n\n\nlog10(target_distance):room_condition\n0.0008212\n0.0008212\n1\n427.78936\n0.0528095\n0.8183545\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/exp_1_efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.9337767\n0.95\n0.9029635\n1\n\n\nroom_condition\n0.0000611\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0001234\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"Congruent VE:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Small VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"Congruent VE\", \"Small VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.43\n-0.53 – -0.33\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.682\n\n\nroom condition [Small VE]\n-0.01\n-0.07 – 0.05\n0.770\n\n\ntarget distance × roomcondition [Small VE]\n-0.00\n-0.01 – 0.01\n0.826\n\n\nRandom Effects\n\n\n\nσ2\n0.02\n\n\n\nτ00 subject\n0.07\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.04\n\n\nτ11 subject.room_conditionSmall VE\n0.03\n\n\nρ01 subject\n-0.53\n\n\nICC\n0.77\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.001 / 0.769\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0020636\n0.0020636\n1\n44.68409\n0.1189410\n0.7318040\n\n\nroom_condition\n0.0014853\n0.0014853\n1\n169.80253\n0.0856056\n0.7701971\n\n\ntarget_distance:room_condition\n0.0008375\n0.0008375\n1\n427.23731\n0.0482704\n0.8262057\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0026548\n0.95\n0\n1\n\n\nroom_condition\n0.0005039\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0001130\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual log bias (%)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"CVE\", \"SVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.04\n0.02 – 0.06\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.01 – -0.00\n0.031\n\n\nroom condition [Small VE]\n0.01\n-0.01 – 0.03\n0.330\n\n\ntarget distance × roomcondition [Small VE]\n-0.00\n-0.00 – 0.00\n0.580\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nτ11 subject.room_conditionSmall VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.029 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0318835\n0.0318835\n1\n66.08058\n10.7347287\n0.0016772\n\n\nroom_condition\n0.0028286\n0.0028286\n1\n366.12350\n0.9523449\n0.3297675\n\n\ntarget_distance:room_condition\n0.0009101\n0.0009101\n1\n503.19071\n0.3064058\n0.5801400\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeSBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_sizeSBVar, file=\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_sizeSBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1397473\n0.95\n0.0352752\n1\n\n\nroom_condition\n0.0025944\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0006086\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.48\n0.39 – 0.57\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.01 – 0.00\n0.177\n\n\nroom condition [Small VE]\n-0.01\n-0.06 – 0.05\n0.833\n\n\ntarget distance × roomcondition [Small VE]\n0.00\n-0.00 – 0.01\n0.424\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.08\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.01\n\n\nτ11 subject.room_conditionSmall VE\n0.00\n\n\nρ01 subject\n-0.45\n\n\nICC\n0.83\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.002 / 0.834\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0166184\n0.0166184\n1\n45.14117\n1.2049712\n0.2781513\n\n\nroom_condition\n0.0006101\n0.0006101\n1\n158.16476\n0.0442407\n0.8336772\n\n\ntarget_distance:room_condition\n0.0088238\n0.0088238\n1\n426.84723\n0.6397978\n0.4242289\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0259994\n0.95\n0\n1\n\n\nroom_condition\n0.0002796\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0014966\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"CVE\", \"SVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 1",
      "ADP Analysis"
    ]
  },
  {
    "objectID": "study/Experiment-1/ADP/ADP-Experiment-1.html#adp-analysis-of-experiment-1",
    "href": "study/Experiment-1/ADP/ADP-Experiment-1.html#adp-analysis-of-experiment-1",
    "title": "ADP Analysis",
    "section": "",
    "text": "This section fits a Linear Mixed Effects Model with:\n\nLogarithm of perceived distance as dependent variable\nLogarithm of target distance as fixed effect\nRoom condition as fixed effect\nConsidering subject as random effect for random slope and intercept\n\n\n\n\n\nCode\nm.Dist1 &lt;-  lmer(log10(perc_dist) ~ log10(target_distance)*room_condition+\n                   (1+log10(target_distance)|subject)+\n                   (0+room_condition|subject),\n                 data = df.experiment_1) \n\nmDist1stats &lt;- extract_stats(ggcoefstats(m.Dist1))\n\nm.Dist1.tidy &lt;- tidy(m.Dist1)\nwrite_csv(m.Dist1.tidy, file=\"./stats/exp_1_model_detail.csv\")\ntab_model(m.Dist1, file =\"./stats/exp_1_lmem.html\")\n\n\n\n\n \nlog10(perc_dist)\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.42\n-0.53 – -0.31\n&lt;0.001\n\n\ntarget distance [log10]\n1.03\n0.94 – 1.12\n&lt;0.001\n\n\nroom condition [Small VE]\n-0.00\n-0.08 – 0.07\n0.897\n\n\ntarget distance [log10] ×room condition [Small VE]\n-0.01\n-0.10 – 0.08\n0.818\n\n\nRandom Effects\n\n\n\nσ2\n0.02\n\n\n\nτ00 subject\n0.10\n\n\nτ11 subject.log10(target_distance)\n0.05\n\n\nτ11 subject.room_conditionCongruent VE\n0.02\n\n\nτ11 subject.room_conditionSmall VE\n0.02\n\n\nρ01 subject\n-0.54\n\n\nICC\n0.82\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.373 / 0.889\n\n\n\n\n\n\n\n\n\n\n\nCode\nanov1 = anova(m.Dist1)\nwrite.csv(anov1 , file = \"./stats/exp_1_anova.csv\")\nknitr::kable(anov1, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\nlog10(target_distance)\n9.8561634\n9.8561634\n1\n44.95366\n633.8652775\n0.0000000\n\n\nroom_condition\n0.0002595\n0.0002595\n1\n273.10060\n0.0166892\n0.8973050\n\n\nlog10(target_distance):room_condition\n0.0008212\n0.0008212\n1\n427.78936\n0.0528095\n0.8183545\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neta_sqrd = eta_squared(anov1)\nwrite.csv(eta_sqrd, file=\"./stats/exp_1_efect_size_partial_eta_sqrd.csv\")\n#eta_sqrd\nknitr::kable(eta_sqrd, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\nlog10(target_distance)\n0.9337767\n0.95\n0.9029635\n1\n\n\nroom_condition\n0.0000611\n0.95\n0.0000000\n1\n\n\nlog10(target_distance):room_condition\n0.0001234\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.experiment_1$Modelfitted1&lt;-predict(m.Dist1)\n\nFittedlmPlot1 &lt;-ggplot()+\n  facet_grid(subject ~ room_condition, labeller=label_both)+\n  geom_line(data = df.experiment_1, aes(x = target_distance, y = 10^Modelfitted1, colour = room_condition))+\n  geom_point(data = df.experiment_1, aes(x = target_distance, y =perc_dist, group=room_condition,colour = room_condition), size=3)+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[2], myViridis[1])) +\n  scale_fill_manual(values = c(myViridis[2], myViridis[1])) +\n  xlab(\"Targent_distance\")+\n  ylab(\"Perceived_distance\")+\n  theme(legend.position = \"none\")\n\n\nfigures_folder = \"./figures/\"\nfilename = paste(figures_folder, .Platform$file.sep, \"inidividual-fits\", \".png\", sep = '')\n\n#png(filename, res=600, units=\"cm\", width=15, height=100)\n#plot(FittedlmPlot1)\n#dev.off()\n\n\n\n\nCode\nplot(FittedlmPlot1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.Fixed&lt;-effect(c(\"log10(target_distance)*room_condition\"), m.Dist1)\nFinal.Fixed&lt;-as.data.frame(Final.Fixed)\n\neq1 &lt;- substitute(\"Congruent VE:\" ~~~ italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^mDist1stats$tidy_data$estimate[[1]],digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]], digits = 2)))\neq2 &lt;- substitute(\"Small VE:\"~~~italic(y) == k %.% italic(X)^italic(a),\n                  list(k = round(10^(mDist1stats$tidy_data$estimate[[1]]+mDist1stats$tidy_data$estimate[[3]]), digits = 2),\n                       a = round(mDist1stats$tidy_data$estimate[[2]]+mDist1stats$tidy_data$estimate[[4]], digits = 2)))\n\ndf.experiment_1 &lt;- df.experiment_1 %&gt;%\n  mutate(\n    perc_dist_log_10 = log10(perc_dist)\n  )\n\ntabla.pob &lt;- df.experiment_1%&gt;% \n  group_by(target_distance,room_condition) %&gt;%\n  summarise(Mperc_dist  = mean(perc_dist_log_10),\n            SDperc_dist = sd(perc_dist_log_10)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf1 &lt;- ggplot(tabla.pob, \n             aes(x=target_distance, \n                 y =10^Mperc_dist, \n                 group = room_condition, \n                 color = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y = 10^Mperc_dist, \n                      ymin = 10^(Mperc_dist-SDperc_dist), \n                      ymax = 10^(Mperc_dist+SDperc_dist)),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,jitter.height = 0, dodge.width = .1)\n                  )+\n  geom_abline(intercept = 0, slope = 1, linetype=2) +\n  scale_colour_manual(values = c(myViridis[1], myViridis[2])) +\n  scale_fill_manual(values = c(myViridis[1], myViridis[2])) +\n  geom_line(data = Final.Fixed, aes(x = target_distance, y =10^fit, group=room_condition, color=room_condition))+\n  geom_label(x = -0.1, y = 4.75, label = as.character(as.expression(eq1)), \n             hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = myViridis[2],\n             )+\n  geom_label(x = -0.1, y = 3.8, label = as.character(as.expression(eq2)), \n             hjust = 0, nudge_x =  0,parse = TRUE, size = 4, \n             color = myViridis[1]\n             )+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Perceived distance (m)\",   limits = c(0,5)) +\n  scale_color_manual(labels = c(\"Congruent VE\", \"Small VE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),\n        ) \n\n\nf1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBias &lt;-  lmer(log_bias_m ~target_distance*room_condition+\n                           (1+target_distance|subject)+\n                           (0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logSignedBias, file =\"./stats/log_signed_bias_model.html\")\n\n\n\n\n \nlog_bias_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-0.43\n-0.53 – -0.33\n&lt;0.001\n\n\ntarget distance\n0.00\n-0.01 – 0.01\n0.682\n\n\nroom condition [Small VE]\n-0.01\n-0.07 – 0.05\n0.770\n\n\ntarget distance × roomcondition [Small VE]\n-0.00\n-0.01 – 0.01\n0.826\n\n\nRandom Effects\n\n\n\nσ2\n0.02\n\n\n\nτ00 subject\n0.07\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.04\n\n\nτ11 subject.room_conditionSmall VE\n0.03\n\n\nρ01 subject\n-0.53\n\n\nICC\n0.77\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.001 / 0.769\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSB &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBias)\n\nFinal.FixedlogSB&lt;-as.data.frame(Final.FixedlogSB)\n\nlogSignedBiasStats &lt;- extract_stats(ggcoefstats(m.logSignedBias))\n\nanovlogSB &lt;- anova(m.logSignedBias)\nwrite_csv(anovlogSB, file =\"./stats/log_signed_bias_anova.csv\")\nknitr::kable(anovlogSB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0020636\n0.0020636\n1\n44.68409\n0.1189410\n0.7318040\n\n\nroom_condition\n0.0014853\n0.0014853\n1\n169.80253\n0.0856056\n0.7701971\n\n\ntarget_distance:room_condition\n0.0008375\n0.0008375\n1\n427.23731\n0.0482704\n0.8262057\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_size = eta_squared(anovlogSB)\nwrite_csv(effect_size, file =\"./stats/log_signed_bias_effect_size.csv\")\nknitr::kable(effect_size, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0026548\n0.95\n0\n1\n\n\nroom_condition\n0.0005039\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0001130\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logSB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogSB  = mean(log_bias_m),\n            SDlogSB = sd(log_bias_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\n\nf2 &lt;- ggplot(tabla.pob_logSB, aes(x=target_distance, \n                                  y =(10^MlogSB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogSB-1)*100, \n                      ymin = (10^(MlogSB-SDlogSB)-1)*100, \n                      ymax = (10^(MlogSB+SDlogSB)-1)*100),\n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogSB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual log bias (%)\",   limits = c(-100,0)) +\n  scale_color_manual(labels = c(\"CVE\", \"SVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logSignedBiasVar &lt;-  lmer(log_bias_var~target_distance*room_condition\n                            +(1+target_distance|subject)\n                            +(0+room_condition|subject),\n                            data = df.experiment_1)\n\ntab_model(m.logSignedBiasVar, file =\"./stats/log_signed_bias_var_model.html\")\n\n\n\n\n \nlog_bias_var\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.04\n0.02 – 0.06\n&lt;0.001\n\n\ntarget distance\n-0.00\n-0.01 – -0.00\n0.031\n\n\nroom condition [Small VE]\n0.01\n-0.01 – 0.03\n0.330\n\n\ntarget distance × roomcondition [Small VE]\n-0.00\n-0.00 – 0.00\n0.580\n\n\nRandom Effects\n\n\n\nσ2\n0.00\n\n\n\nτ00 subject\n0.00\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.00\n\n\nτ11 subject.room_conditionSmall VE\n0.00\n\n\nρ01 subject\n-1.00\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.029 / NA\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogSBVar &lt;-effect(c(\"target_distance*room_condition\"), m.logSignedBiasVar)\n\nFinal.FixedlogSBVar&lt;-as.data.frame(Final.FixedlogSBVar)\n\n#logSignedBiasVarStats &lt;- extract_stats(ggcoefstats(m.logSignedBiasVar))\n\nanovlogSBVar &lt;- anova(m.logSignedBiasVar)\nwrite_csv(anovlogSBVar, file = \"./stats/log_signed_bias_var_anova.csv\")\nknitr::kable(anovlogSBVar, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0318835\n0.0318835\n1\n66.08058\n10.7347287\n0.0016772\n\n\nroom_condition\n0.0028286\n0.0028286\n1\n366.12350\n0.9523449\n0.3297675\n\n\ntarget_distance:room_condition\n0.0009101\n0.0009101\n1\n503.19071\n0.3064058\n0.5801400\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeSBVar = eta_squared(anovlogSBVar)\nwrite_csv(effect_sizeSBVar, file=\"./stats/log_signed_bias_var_effect_size.csv\")\nknitr::kable(effect_sizeSBVar, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.1397473\n0.95\n0.0352752\n1\n\n\nroom_condition\n0.0025944\n0.95\n0.0000000\n1\n\n\ntarget_distance:room_condition\n0.0006086\n0.95\n0.0000000\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf2_var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nm.logUnsignedBias &lt;-  lmer(log_bias_unsigned_m~target_distance*room_condition\n                           +(1+target_distance|subject)\n                           +(0+room_condition|subject),\n                         data = df.experiment_1)\n\ntab_model(m.logUnsignedBias, file =\"./stats/log_unsigned_bias_model.html\")\n\n\n\n\n \nlog_bias_unsigned_m\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n0.48\n0.39 – 0.57\n&lt;0.001\n\n\ntarget distance\n-0.01\n-0.01 – 0.00\n0.177\n\n\nroom condition [Small VE]\n-0.01\n-0.06 – 0.05\n0.833\n\n\ntarget distance × roomcondition [Small VE]\n0.00\n-0.00 – 0.01\n0.424\n\n\nRandom Effects\n\n\n\nσ2\n0.01\n\n\n\nτ00 subject\n0.08\n\n\nτ11 subject.target_distance\n0.00\n\n\nτ11 subject.room_conditionCongruent VE\n0.01\n\n\nτ11 subject.room_conditionSmall VE\n0.00\n\n\nρ01 subject\n-0.45\n\n\nICC\n0.83\n\n\nN subject\n49\n\nObservations\n575\n\n\nMarginal R2 / Conditional R2\n0.002 / 0.834\n\n\n\n\n\n\n\n\n\n\nCode\nFinal.FixedlogUB &lt;-effect(c(\"target_distance*room_condition\"), m.logUnsignedBias)\n\nFinal.FixedlogUB&lt;-as.data.frame(Final.FixedlogUB)\n\n#logUnsignedBiasStats &lt;- extract_stats(ggcoefstats(m.logUnsignedBias))\n\nanovlogUB &lt;- anova(m.logUnsignedBias)\nwrite_csv(anovlogUB, file=\"./stats/log_unsigned_bias_anova.csv\")\nknitr::kable(anovlogUB, \"html\")\n\n\n\n\n\n\nSum Sq\nMean Sq\nNumDF\nDenDF\nF value\nPr(&gt;F)\n\n\n\n\ntarget_distance\n0.0166184\n0.0166184\n1\n45.14117\n1.2049712\n0.2781513\n\n\nroom_condition\n0.0006101\n0.0006101\n1\n158.16476\n0.0442407\n0.8336772\n\n\ntarget_distance:room_condition\n0.0088238\n0.0088238\n1\n426.84723\n0.6397978\n0.4242289\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neffect_sizeUB = eta_squared(anovlogUB)\nwrite_csv(effect_sizeUB, file=\"./stats/log_unsigned_bias_effect_size.csv\")\nknitr::kable(effect_sizeUB, \"html\")\n\n\n\n\n\nParameter\nEta2_partial\nCI\nCI_low\nCI_high\n\n\n\n\ntarget_distance\n0.0259994\n0.95\n0\n1\n\n\nroom_condition\n0.0002796\n0.95\n0\n1\n\n\ntarget_distance:room_condition\n0.0014966\n0.95\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntabla.pob_logUB &lt;- df.experiment_1 %&gt;% group_by(target_distance,room_condition) %&gt;%\n  summarise(MlogUB  = mean(log_bias_unsigned_m),\n            SDlogUB = sd(log_bias_unsigned_m)/sqrt(n()))  %&gt;%\n  ungroup()\n\nf3 &lt;- ggplot(tabla.pob_logUB, aes(x=target_distance, \n                                  y =(10^MlogUB-1)*100, \n                                  group = room_condition, \n                                  color  = room_condition)) +\n  geom_pointrange(aes(x = target_distance, \n                      y =(10^MlogUB-1)*100, \n                      ymin = (10^(MlogUB-SDlogUB)-1)*100, \n                      ymax = (10^(MlogUB+SDlogUB)-1)*100), \n                  alpha = 1,\n                  position = position_jitterdodge(jitter.width = .1,\n                                                  jitter.height = 0,\n                                                  dodge.width = .1 ))+\n  geom_line(data = Final.FixedlogUB, aes(x = target_distance, \n                                         y =(10^fit-1)*100, \n                                         group=room_condition, \n                                         color=room_condition))+\n  scale_x_continuous(name=\"Distance source (m)\", limits = c(0,10)) +\n  scale_y_continuous(name=\"Mean percentual unsigned log bias (%)\",   limits = c(0,300)) +\n  scale_color_manual(labels = c(\"CVE\", \"SVE\"), values =c(myViridis[2], myViridis[1]))+\n  theme_pubr(base_size = 12, margin = TRUE)+\n  theme(legend.position = \"top\",\n        legend.title = element_blank(),)\n\n\n\n\nCode\nf3",
    "crumbs": [
      "Experiment 1",
      "ADP Analysis"
    ]
  }
]